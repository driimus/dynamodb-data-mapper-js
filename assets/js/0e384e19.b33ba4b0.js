"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[671],{4852:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(9231);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),m=a,y=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return t?r.createElement(y,i(i({ref:n},u),{},{components:t})):r.createElement(y,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},2821:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(6215),a=(t(9231),t(4852));const o={sidebar_position:1},i="Installation",s={unversionedId:"intro",id:"intro",title:"Installation",description:"Configure Data Mapper for your project in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/dynamodb-data-mapper-js/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar"},l={},p=[{value:"What you&#39;ll need",id:"what-youll-need",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Building expressions without the Data Mapper",id:"building-expressions-without-the-data-mapper",level:3}],u={toc:p};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Configure Data Mapper for your project ",(0,a.kt)("strong",{parentName:"p"},"in less than 5 minutes"),"."),(0,a.kt)("h2",{id:"what-youll-need"},"What you'll need"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," version 14 or above:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"When installing Node.js, you are recommended to tick all checkboxes related to dependencies.")))),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@driimus/dynamodb-data-mapper")," package provides\na simple way to persist and load an application's domain objects to and from\nAmazon DynamoDB. The documentation covers all of the data mapper's constituent packages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm i @driimus/dynamodb-data-mapper\n")),(0,a.kt)("p",null,"You can use it in conjunction with ",(0,a.kt)("inlineCode",{parentName:"p"},"@driimus/dynamodb-data-mapper-annotations")," to describe the relationship between a class and its representation in\nDynamoDB by adding a few decorators."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm i @driimus/dynamodb-data-mapper-annotations\n")),(0,a.kt)("h3",{id:"building-expressions-without-the-data-mapper"},"Building expressions without the Data Mapper"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@driimus/dynamodb-expressions")," package has been updated to support expression building without marshalling attribute values. It comes with no extraneous dependencies, so feel free to plug whichever marshaller you feel like."),(0,a.kt)("p",null,"If you're looking for a minimal setup, you can use it with ",(0,a.kt)("inlineCode",{parentName:"p"},"@aws-sdk/lib-dynamodb"),", which handles data marshalling under the hood:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  ExpressionAttributes,\n  serializeConditionExpression,\n  equals,\n  beginsWith,\n} from '@driimus/dynamodb-expressions';\n\nimport { DynamoDBClient } from '@aws-sdk/client-dynamodb';\nimport { DynamoDBDocumentClient, QueryCommand } from '@aws-sdk/lib-dynamodb';\n\nconst documentClient = DynamoDBDocumentClient.from(new DynamoDBClient({}));\n\ntype QueryParams = {\n  PK: string;\n  SKPrefix: string;\n};\n\nasync function query({ PK, SKPrefix }: QueryParams) {\n  const attributes = new ExpressionAttributes();\n\n  const KeyConditionExpression = serializeConditionExpression(\n    {\n      type: 'And',\n      conditions: [\n        { subject: 'PK', ...equals(PK) },\n        { subject: 'SK', ...beginsWith(SKPrefix) },\n      ],\n    },\n    attributes\n  );\n\n  return documentClient.send(\n    new QueryCommand({\n      TableName: 'my_table',\n      KeyConditionExpression,\n      ExpressionAttributeNames: attributes.names,\n      ExpressionAttributeValues: attributes.values,\n    })\n  );\n}\n")))}d.isMDXComponent=!0}}]);